;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name offcourse.adapters.pouchdb, :imports nil, :requires {cljs.core.async cljs.core.async, component com.stuartsierra.component, com.stuartsierra.component com.stuartsierra.component, cljsjs.pouchdb cljsjs.pouchdb, offcourse.helpers.interop offcourse.helpers.interop}, :uses {timeout cljs.core.async, <! cljs.core.async, chan cljs.core.async, jsx->clj offcourse.helpers.interop, pipe cljs.core.async, handle-json-response offcourse.helpers.interop, >! cljs.core.async}, :defs {->PouchDB {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb.cljs", :line 8, :column 12, :end-line 8, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([name design-doc bootstrap-doc connection]))}, :name offcourse.adapters.pouchdb/->PouchDB, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb.cljs", :end-column 19, :method-params ([name design-doc bootstrap-doc connection]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 8, :end-line 8, :max-fixed-arity 4, :fn-var true, :arglists (quote ([name design-doc bootstrap-doc connection]))}, map->PouchDB {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb.cljs", :line 8, :column 12, :end-line 8, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__29392]))}, :name offcourse.adapters.pouchdb/map->PouchDB, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb.cljs", :end-column 19, :method-params ([G__29392]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__29392]))}, doc {:name offcourse.adapters.pouchdb/doc, :source "doc", :file "<cljs repl>", :line 1, :column 1, :end-line 1, :end-column 9, :meta {:source "doc", :file "NO_SOURCE_FILE", :line 1, :column 6, :end-line 1, :end-column 9}}, fetch {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb.cljs", :line 23, :column 7, :end-line 23, :end-column 12, :arglists (quote ([pouch doc-id]))}, :name offcourse.adapters.pouchdb/fetch, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb.cljs", :end-column 12, :method-params ([pouch doc-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pouch doc-id]))}, p {:name offcourse.adapters.pouchdb/p, :source "p", :file "<cljs repl>", :line 1, :column 1, :end-line 1, :end-column 7, :meta {:source "p", :file "NO_SOURCE_FILE", :line 1, :column 6, :end-line 1, :end-column 7}}, refresh {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb.cljs", :line 26, :column 7, :end-line 26, :end-column 14, :arglists (quote ([pouch doc]))}, :name offcourse.adapters.pouchdb/refresh, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb.cljs", :end-column 14, :method-params ([pouch doc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pouch doc]))}, bootstrap {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb.cljs", :line 29, :column 7, :end-line 29, :end-column 16, :arglists (quote ([{:keys [connection design-doc bootstrap-doc]}]))}, :name offcourse.adapters.pouchdb/bootstrap, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb.cljs", :end-column 16, :method-params ([p__29398]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [connection design-doc bootstrap-doc]}]))}, PouchDB {:num-fields 4, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name offcourse.adapters.pouchdb/PouchDB, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb.cljs", :end-column 19, :type true, :column 12, :internal-ctor true, :line 8, :record true, :end-line 8, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, new-db {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb.cljs", :line 15, :column 7, :end-line 15, :end-column 13, :arglists (quote ([name design-doc bootstrap-doc]))}, :name offcourse.adapters.pouchdb/new-db, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb.cljs", :end-column 13, :method-params ([name design-doc bootstrap-doc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 3, :fn-var true, :arglists (quote ([name design-doc bootstrap-doc]))}, info {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb.cljs", :line 20, :column 7, :end-line 20, :end-column 11, :arglists (quote ([pouch]))}, :name offcourse.adapters.pouchdb/info, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb.cljs", :end-column 11, :method-params ([pouch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pouch]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:_id design-doc doc connection p :else :ns :name offcourse.adapters.pouchdb/p :file :end-column :recur :source offcourse.adapters.pouchdb :column name :line :end-line offcourse.adapters.pouchdb/doc :error :bootstrap-doc :design-doc :arglists :doc :connection :test bootstrap-doc}, :order [:name :design-doc :bootstrap-doc :connection name design-doc bootstrap-doc connection :_id :error :recur :else offcourse.adapters.pouchdb/doc :ns :file :end-column :source :column :line :end-line :arglists :doc :test offcourse.adapters.pouchdb doc offcourse.adapters.pouchdb/p p]}, :doc nil}