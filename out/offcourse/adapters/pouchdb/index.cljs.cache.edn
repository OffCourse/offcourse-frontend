;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name offcourse.adapters.pouchdb.index, :imports nil, :requires {cljs.core.async cljs.core.async, component com.stuartsierra.component, com.stuartsierra.component com.stuartsierra.component, wrapper offcourse.adapters.pouchdb.wrapper, offcourse.adapters.pouchdb.wrapper offcourse.adapters.pouchdb.wrapper, va offcourse.protocols.validatable, offcourse.protocols.validatable offcourse.protocols.validatable}, :uses {timeout cljs.core.async, <! cljs.core.async, chan cljs.core.async, Validatable offcourse.protocols.validatable, pipe cljs.core.async, >! cljs.core.async}, :defs {PouchDB {:num-fields 4, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable offcourse.protocols.validatable/Validatable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name offcourse.adapters.pouchdb.index/PouchDB, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :end-column 19, :type true, :column 12, :internal-ctor true, :line 8, :record true, :end-line 8, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, Validatable {:impls (offcourse.adapters.pouchdb.index/PouchDB)}, ->PouchDB {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :line 8, :column 12, :end-line 8, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([name design-doc bootstrap-doc connection]))}, :name offcourse.adapters.pouchdb.index/->PouchDB, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :end-column 19, :method-params ([name design-doc bootstrap-doc connection]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 8, :end-line 8, :max-fixed-arity 4, :fn-var true, :arglists (quote ([name design-doc bootstrap-doc connection]))}, map->PouchDB {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :line 8, :column 12, :end-line 8, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__32464]))}, :name offcourse.adapters.pouchdb.index/map->PouchDB, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :end-column 19, :method-params ([G__32464]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__32464]))}, new-db {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :line 29, :column 7, :end-line 29, :end-column 13, :arglists (quote ([name design-doc bootstrap-doc]))}, :name offcourse.adapters.pouchdb.index/new-db, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :end-column 13, :method-params ([name design-doc bootstrap-doc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 3, :fn-var true, :arglists (quote ([name design-doc bootstrap-doc]))}, bootstrap-data {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :line 34, :column 7, :end-line 34, :end-column 21, :arglists (quote ([{:keys [bootstrap-doc design-doc connection]}]))}, :name offcourse.adapters.pouchdb.index/bootstrap-data, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :end-column 21, :method-params ([p__32588]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [bootstrap-doc design-doc connection]}]))}, bootstrap {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :line 46, :column 7, :end-line 46, :end-column 16, :arglists (quote ([db]))}, :name offcourse.adapters.pouchdb.index/bootstrap, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :end-column 16, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{design-doc connection :include-docs :else :name :missing-data :recur name :keys :status :error :bootstrap-doc :db-bootstrapped :design-doc :db-ready :connection bootstrap-doc}, :order [:name :design-doc :bootstrap-doc :connection :recur :status :db-ready :error :missing-data :else name design-doc bootstrap-doc connection :db-bootstrapped :keys :include-docs]}, :doc nil}