;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name offcourse.adapters.pouchdb.index, :imports nil, :requires {cljs.core.async cljs.core.async, component com.stuartsierra.component, com.stuartsierra.component com.stuartsierra.component, cljsjs.pouchdb cljsjs.pouchdb}, :uses {<! cljs.core.async, chan cljs.core.async, put! cljs.core.async, take! cljs.core.async}, :defs {init-db {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :line 7, :column 7, :end-line 7, :end-column 14, :arglists (quote ([str]))}, :name offcourse.adapters.pouchdb.index/init-db, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :end-column 14, :method-params ([str]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([str]))}, handle-promise {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :line 10, :column 7, :end-line 10, :end-column 21, :arglists (quote ([promise] [promise cb])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([promise] [promise cb]), :arglists ([promise] [promise cb]), :arglists-meta (nil nil)}}, :name offcourse.adapters.pouchdb.index/handle-promise, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([promise] [promise cb]), :arglists ([promise] [promise cb]), :arglists-meta (nil nil)}, :method-params ([promise] [promise cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 2, :fn-var true, :arglists ([promise] [promise cb])}, PouchDB {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name offcourse.adapters.pouchdb.index/PouchDB, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :end-column 19, :type true, :column 12, :internal-ctor true, :line 18, :record true, :end-line 18, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->PouchDB {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :line 18, :column 12, :end-line 18, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([local-name local-connection]))}, :name offcourse.adapters.pouchdb.index/->PouchDB, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :end-column 19, :method-params ([local-name local-connection]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([local-name local-connection]))}, map->PouchDB {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :line 18, :column 12, :end-line 18, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__28561]))}, :name offcourse.adapters.pouchdb.index/map->PouchDB, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :end-column 19, :method-params ([G__28561]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__28561]))}, new-pouch {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :line 29, :column 7, :end-line 29, :end-column 16, :arglists (quote ([local-name]))}, :name offcourse.adapters.pouchdb.index/new-pouch, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :end-column 16, :method-params ([local-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([local-name]))}, info {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :line 32, :column 7, :end-line 32, :end-column 11, :arglists (quote ([pouch cb]))}, :name offcourse.adapters.pouchdb.index/info, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs", :end-column 11, :method-params ([pouch cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pouch cb]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:local-connection local-name local-connection :local-name}, :order [:local-name :local-connection local-name local-connection]}, :doc nil}