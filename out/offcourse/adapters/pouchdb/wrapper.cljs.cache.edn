;; Analyzed by ClojureScript 1.7.170
{:use-macros {match cljs.core.match, go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name offcourse.adapters.pouchdb.wrapper, :imports nil, :requires {cljs.core.async cljs.core.async, cljsjs.pouchdb cljsjs.pouchdb, cljs.core.match cljs.core.match, set clojure.set, clojure.set clojure.set, offcourse.helpers.interop offcourse.helpers.interop}, :uses {timeout cljs.core.async, <! cljs.core.async, chan cljs.core.async, jsx->clj offcourse.helpers.interop, pipe cljs.core.async, >! cljs.core.async, handle-js-response offcourse.helpers.interop}, :defs {fetch {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/wrapper.cljs", :line 22, :column 7, :end-line 22, :end-column 12, :arglists (quote ([pouch & opts])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(pouch opts)], :arglists ([pouch & opts]), :arglists-meta (nil)}}, :name offcourse.adapters.pouchdb.wrapper/fetch, :variadic true, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/wrapper.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(pouch opts)], :arglists ([pouch & opts]), :arglists-meta (nil)}, :method-params [(pouch opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists ([pouch & opts])}, fetch-docs {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/wrapper.cljs", :line 18, :column 7, :end-line 18, :end-column 17, :arglists (quote ([pouch keys include-docs]))}, :name offcourse.adapters.pouchdb.wrapper/fetch-docs, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/wrapper.cljs", :end-column 17, :method-params ([pouch keys include-docs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pouch keys include-docs]))}, init {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/wrapper.cljs", :line 12, :column 7, :end-line 12, :end-column 11, :arglists (quote ([name]))}, :name offcourse.adapters.pouchdb.wrapper/init, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/wrapper.cljs", :end-column 11, :method-params ([name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name]))}, db {:name offcourse.adapters.pouchdb.wrapper/db, :source "db", :file "<cljs repl>", :line 1, :column 1, :end-line 1, :end-column 8, :meta {:source "db", :file "NO_SOURCE_FILE", :line 1, :column 6, :end-line 1, :end-column 8}}, get-db-doc-id {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/wrapper.cljs", :line 9, :column 7, :end-line 9, :end-column 20, :arglists (quote ([doc]))}, :name offcourse.adapters.pouchdb.wrapper/get-db-doc-id, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/wrapper.cljs", :end-column 20, :method-params ([doc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([doc]))}, has-doc? {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/wrapper.cljs", :line 35, :column 7, :end-line 35, :end-column 15, :arglists (quote ([pouch doc]))}, :name offcourse.adapters.pouchdb.wrapper/has-doc?, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/wrapper.cljs", :end-column 15, :method-params ([pouch doc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pouch doc]))}, refresh-doc {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/wrapper.cljs", :line 32, :column 7, :end-line 32, :end-column 18, :arglists (quote ([pouch doc]))}, :name offcourse.adapters.pouchdb.wrapper/refresh-doc, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/wrapper.cljs", :end-column 18, :method-params ([pouch doc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pouch doc]))}, info {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/wrapper.cljs", :line 15, :column 7, :end-line 15, :end-column 11, :arglists (quote ([pouch]))}, :name offcourse.adapters.pouchdb.wrapper/info, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/wrapper.cljs", :end-column 11, :method-params ([pouch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pouch]))}, fetch-doc {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/wrapper.cljs", :line 29, :column 7, :end-line 29, :end-column 16, :arglists (quote ([pouch doc-id]))}, :name offcourse.adapters.pouchdb.wrapper/fetch-doc, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/wrapper.cljs", :end-column 16, :method-params ([pouch doc-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pouch doc-id]))}, missing-docs {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/wrapper.cljs", :line 41, :column 7, :end-line 41, :end-column 19, :arglists (quote ([pouch docs]))}, :name offcourse.adapters.pouchdb.wrapper/missing-docs, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/wrapper.cljs", :end-column 19, :method-params ([pouch docs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pouch docs]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, cljs.core.match cljs.core.match}, :cljs.analyzer/constants {:seen #{offcourse.adapters.pouchdb.wrapper :_id :deleted :include-docs :key :else :ns :name :value :file :end-column :recur :source db :column :rows :keys :line :clojure.core.match/not-found :id offcourse.adapters.pouchdb.wrapper/db :end-line :error :arglists :doc :test :include_docs}, :order [offcourse.adapters.pouchdb.wrapper/db :ns :name :file :end-column :source :column :line :end-line :arglists :doc :test offcourse.adapters.pouchdb.wrapper db :_id :key :keys :rows :error :recur :else :value :deleted :id :clojure.core.match/not-found :include_docs :include-docs]}, :doc nil}