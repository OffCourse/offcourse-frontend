;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name offcourse.views.debug, :imports nil, :requires {rum rum.core, rum.core rum.core}, :uses nil, :defs {row {:name offcourse.views.debug/row, :file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/1vk/-rcsl8f/offcourse/views/debug.cljs", :line 4, :column 1, :end-line 4, :end-column 14, :meta {:file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/1vk/-rcsl8f/offcourse/views/debug.cljs", :line 4, :column 11, :end-line 4, :end-column 14}}, rows {:protocol-inline nil, :meta {:file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/1vk/-rcsl8f/offcourse/views/debug.cljs", :line 7, :column 7, :end-line 7, :end-column 11, :arglists (quote ([object]))}, :name offcourse.views.debug/rows, :variadic false, :file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/1vk/-rcsl8f/offcourse/views/debug.cljs", :end-column 11, :method-params ([object]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([object]))}, debugger {:name offcourse.views.debug/debugger, :file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/1vk/-rcsl8f/offcourse/views/debug.cljs", :line 13, :column 1, :end-line 13, :end-column 19, :meta {:file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/1vk/-rcsl8f/offcourse/views/debug.cljs", :line 13, :column 11, :end-line 13, :end-column 19}}, render {:protocol-inline nil, :meta {:file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/1vk/-rcsl8f/offcourse/views/debug.cljs", :line 19, :column 7, :end-line 19, :end-column 13, :arglists (quote ([object]))}, :name offcourse.views.debug/render, :variadic false, :file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/1vk/-rcsl8f/offcourse/views/debug.cljs", :end-column 13, :method-params ([object]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([object]))}}, :require-macros {rum rum.core, rum.core rum.core}, :cljs.analyzer/constants {:seen #{:local-connection :rum/class :local-name}, :order [:rum/class :local-name :local-connection]}, :doc nil}