;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name offcourse.views.index, :imports nil, :requires {cljs.core.async cljs.core.async, component com.stuartsierra.component, com.stuartsierra.component com.stuartsierra.component, debug offcourse.views.debug, offcourse.views.debug offcourse.views.debug}, :uses {<! cljs.core.async, close! cljs.core.async, chan cljs.core.async}, :defs {counter {:name offcourse.views.index/counter, :file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/20y/-rcsl8f/offcourse/views/index.cljs", :line 7, :column 1, :end-line 7, :end-column 17, :meta {:file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/20y/-rcsl8f/offcourse/views/index.cljs", :line 7, :column 10, :end-line 7, :end-column 17}}, render {:protocol-inline nil, :meta {:file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/20y/-rcsl8f/offcourse/views/index.cljs", :line 9, :column 7, :end-line 9, :end-column 13, :arglists (quote ([response]))}, :name offcourse.views.index/render, :variadic false, :file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/20y/-rcsl8f/offcourse/views/index.cljs", :end-column 13, :method-params ([response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([response]))}, listen {:protocol-inline nil, :meta {:file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/20y/-rcsl8f/offcourse/views/index.cljs", :line 12, :column 7, :end-line 12, :end-column 13, :arglists (quote ([channel]))}, :name offcourse.views.index/listen, :variadic false, :file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/20y/-rcsl8f/offcourse/views/index.cljs", :end-column 13, :method-params ([channel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([channel]))}, Renderer {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name offcourse.views.index/Renderer, :file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/20y/-rcsl8f/offcourse/views/index.cljs", :end-column 20, :type true, :column 12, :internal-ctor true, :line 20, :record true, :end-line 20, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Renderer {:protocol-inline nil, :meta {:file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/20y/-rcsl8f/offcourse/views/index.cljs", :line 20, :column 12, :end-line 20, :end-column 20, :internal-ctor true, :factory :positional, :arglists (quote ([listener input-channel]))}, :name offcourse.views.index/->Renderer, :variadic false, :file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/20y/-rcsl8f/offcourse/views/index.cljs", :end-column 20, :method-params ([listener input-channel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([listener input-channel]))}, map->Renderer {:protocol-inline nil, :meta {:file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/20y/-rcsl8f/offcourse/views/index.cljs", :line 20, :column 12, :end-line 20, :end-column 20, :internal-ctor true, :factory :map, :arglists (quote ([G__28603]))}, :name offcourse.views.index/map->Renderer, :variadic false, :file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/20y/-rcsl8f/offcourse/views/index.cljs", :end-column 20, :method-params ([G__28603]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__28603]))}, new-renderer {:protocol-inline nil, :meta {:file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/20y/-rcsl8f/offcourse/views/index.cljs", :line 28, :column 7, :end-line 28, :end-column 19, :arglists (quote ([]))}, :name offcourse.views.index/new-renderer, :variadic false, :file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/20y/-rcsl8f/offcourse/views/index.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:input-channel :else input-channel :recur :listener listener}, :order [:recur :else :listener :input-channel listener input-channel]}, :doc nil}