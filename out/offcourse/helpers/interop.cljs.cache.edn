;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name offcourse.helpers.interop, :imports nil, :requires {cljs.core.async cljs.core.async}, :uses {<! cljs.core.async, chan cljs.core.async, put! cljs.core.async, take! cljs.core.async}, :defs {jsx->clj {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/helpers/interop.cljs", :line 4, :column 7, :end-line 4, :end-column 15, :arglists (quote ([x]))}, :name offcourse.helpers.interop/jsx->clj, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/helpers/interop.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, handle-error {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/helpers/interop.cljs", :line 8, :column 7, :end-line 8, :end-column 19, :arglists (quote ([message]))}, :name offcourse.helpers.interop/handle-error, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/helpers/interop.cljs", :end-column 19, :method-params ([message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message]))}, handle-promise {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/helpers/interop.cljs", :line 12, :column 7, :end-line 12, :end-column 21, :arglists (quote ([promise] [promise cb])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([promise] [promise cb]), :arglists ([promise] [promise cb]), :arglists-meta (nil nil)}}, :name offcourse.helpers.interop/handle-promise, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/helpers/interop.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([promise] [promise cb]), :arglists ([promise] [promise cb]), :arglists-meta (nil nil)}, :method-params ([promise] [promise cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists ([promise] [promise cb])}, handle-json-response {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/helpers/interop.cljs", :line 22, :column 7, :end-line 22, :end-column 27, :arglists (quote ([promise] [promise cb])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([promise] [promise cb]), :arglists ([promise] [promise cb]), :arglists-meta (nil nil)}}, :name offcourse.helpers.interop/handle-json-response, :variadic false, :file "/Users/yeehaa/Documents/offcourse/src/cljs/offcourse/helpers/interop.cljs", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([promise] [promise cb]), :arglists ([promise] [promise cb]), :arglists-meta (nil nil)}, :method-params ([promise] [promise cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists ([promise] [promise cb])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:error}, :order [:error]}, :doc nil}