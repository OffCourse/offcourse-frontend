;; Analyzed by ClojureScript 1.7.170
{:use-macros {html sablono.core}, :excludes #{}, :name offcourse.core, :imports nil, :requires {html sablono.core, sablono.core sablono.core}, :uses nil, :defs {counter {:name offcourse.core/counter, :file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/1ge/-rcsl8f/offcourse/core.cljs", :line 4, :column 1, :end-line 4, :end-column 17, :meta {:file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/1ge/-rcsl8f/offcourse/core.cljs", :line 4, :column 10, :end-line 4, :end-column 17}}, hello {:protocol-inline nil, :meta {:file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/1ge/-rcsl8f/offcourse/core.cljs", :line 6, :column 7, :end-line 6, :end-column 12, :arglists (quote ([counter]))}, :name offcourse.core/hello, :variadic false, :file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/1ge/-rcsl8f/offcourse/core.cljs", :end-column 12, :method-params ([counter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([counter]))}, render {:protocol-inline nil, :meta {:file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/1ge/-rcsl8f/offcourse/core.cljs", :line 9, :column 7, :end-line 9, :end-column 13, :arglists (quote ([]))}, :name offcourse.core/render, :variadic false, :file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/1ge/-rcsl8f/offcourse/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {html sablono.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:p}, :order [:p]}, :doc nil}