;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name adapters.pouchdb.implementations.bootstrappable, :imports nil, :requires {cljs.core.async cljs.core.async, va adapters.pouchdb.implementations.validatable, adapters.pouchdb.implementations.validatable adapters.pouchdb.implementations.validatable, wrapper adapters.pouchdb.wrapper, adapters.pouchdb.wrapper adapters.pouchdb.wrapper}, :uses {<! cljs.core.async}, :defs {bootstrap-data {:protocol-inline nil, :meta {:file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/o66/-rcsl8f/adapters/pouchdb/implementations/bootstrappable.cljs", :line 7, :column 8, :end-line 7, :end-column 22, :private true, :arglists (quote ([{:keys [bootstrap-doc design-doc connection]}]))}, :private true, :name adapters.pouchdb.implementations.bootstrappable/bootstrap-data, :variadic false, :file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/o66/-rcsl8f/adapters/pouchdb/implementations/bootstrappable.cljs", :end-column 22, :method-params ([p__32639]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [bootstrap-doc design-doc connection]}]))}, bootstrap {:protocol-inline nil, :meta {:file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/o66/-rcsl8f/adapters/pouchdb/implementations/bootstrappable.cljs", :line 19, :column 7, :end-line 19, :end-column 16, :arglists (quote ([db]))}, :name adapters.pouchdb.implementations.bootstrappable/bootstrap, :variadic false, :file "/Users/yeehaa/.boot/cache/tmp/Users/yeehaa/Documents/offcourse/o66/-rcsl8f/adapters/pouchdb/implementations/bootstrappable.cljs", :end-column 16, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:else :missing-data :recur :status :error :bootstrap-doc :db-bootstrapped :design-doc :connection}, :order [:bootstrap-doc :design-doc :connection :recur :status :db-bootstrapped :error :missing-data :else]}, :doc nil}