;; Analyzed by ClojureScript 1.7.170
{:name faker.lorem, :doc "Create fake textual data", :excludes #{}, :use-macros nil, :require-macros nil, :uses {capitalize clojure.string, join clojure.string}, :requires {clojure.string clojure.string, data faker.lorem-data, faker.lorem-data faker.lorem-data}, :imports nil, :defs {words {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/out/faker/lorem.cljc", :line 7, :column 7, :end-line 7, :end-column 12, :arglists (quote ([])), :doc "Lazy sequence of random latin words"}, :name faker.lorem/words, :variadic false, :file "out/faker/lorem.cljc", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Lazy sequence of random latin words"}, sentences {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/out/faker/lorem.cljc", :line 12, :column 7, :end-line 12, :end-column 16, :arglists (quote ([] [word-count])), :doc "Lazy sequence of random latin sentences.\n\n  (sentences 5) will generate a sequence of random sentences between\n  5 and 5 + 5 words.\n  (sentences) will generate random sentences between 4 and 4 + 5 words.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [word-count]), :arglists ([] [word-count]), :arglists-meta (nil nil)}}, :name faker.lorem/sentences, :variadic false, :file "out/faker/lorem.cljc", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [word-count]), :arglists ([] [word-count]), :arglists-meta (nil nil)}, :method-params ([] [word-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists ([] [word-count]), :doc "Lazy sequence of random latin sentences.\n\n  (sentences 5) will generate a sequence of random sentences between\n  5 and 5 + 5 words.\n  (sentences) will generate random sentences between 4 and 4 + 5 words."}, paragraphs {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/offcourse/out/faker/lorem.cljc", :line 25, :column 7, :end-line 25, :end-column 17, :arglists (quote ([] [sentence-count])), :doc "Lazy sequence of random latin paragraphs.\n\n  (paragraphs 5) will generate a sequence of random paragraphs between\n  5 and 5 + 2 sentences.\n  (paragraphs) will generate random paragraphs between 3 and 3 + 2 sentences", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [sentence-count]), :arglists ([] [sentence-count]), :arglists-meta (nil nil)}}, :name faker.lorem/paragraphs, :variadic false, :file "out/faker/lorem.cljc", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [sentence-count]), :arglists ([] [sentence-count]), :arglists-meta (nil nil)}, :method-params ([] [sentence-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists ([] [sentence-count]), :doc "Lazy sequence of random latin paragraphs.\n\n  (paragraphs 5) will generate a sequence of random paragraphs between\n  5 and 5 + 2 sentences.\n  (paragraphs) will generate random paragraphs between 3 and 3 + 2 sentences"}}}