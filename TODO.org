* Todos
** TODO  Add Error Handling to Fake DB      <2016-01-07 Thu 18:25>
for instance for invalid resource ids 
Link: file:~/Documents/offcourse/src/cljs/offcourse/adapters/fakedb/implementations/queryable.cljs
** TODO  move course-ids to queryable/check      <2016-01-20 Wed 01:43>
 Link: file:~/Documents/offcourse/src/cljc/offcourse/models/collection_view/validatable.cljs::(defn%20missing-data%20%5B{:keys%20%5Bcollection%20courses%5D%20:as%20vm}%5D
** TODO  Handle Failed Fetch      <2016-01-20 Wed 23:42>
 Link: file:~/Documents/offcourse/src/cljs/offcourse/data_service/index.cljs
** TODO  Better use of core/async      <2016-01-20 Wed 23:43>
 Link: file:~/Documents/offcourse/src/cljs/offcourse/adapters/pouchdb/index.cljs
* Now                        [16%]
+ [-] General        [40%]
  - [X] add ci workflow
  - [X] add cd workflow
  - [ ] add 'new checkpoint' functionality
  - [ ] add 'save course' functionality
  - [ ] add support for not found courses
+ [X] Datastore      [100%]
  - [X] add queryable/modify
  - [X] remove query helper dependency from tests
+ [-] Models         [0%]
  - [-] Datastore
    + [ ] implement queryable/modify
    + [ ] switch to specter paths
    + [X] implement check arity 3
  - [ ] Checkpoint
    + [ ] make :new a valid value for checkpoint-id^
+ Views              [100%]
  - [X] Labels
    + [X] titleize titles
+ [-] Protocols      [66%]
  - [ ] refactor to minus-function-name style
  - [X] Queryable   [100%]
    + [X] add modify
    + [X] add arity 3 to check
  - [X] Responsive  [100%]
    + [X] add forward to listen
+ [ ] Router         [0%]
+ [ ] Views          [0%]
  - [ ] add 'new checkpoint' form
* Next                       [0%]
+ [ ] Protocols      [0%]
  - [ ] Bootstrappable
+ [ ] Viewmodels     [0%]
  - [ ] add converter from hash-map
+ [-] Appstate       [0%]
  - [ ] use vm converter instead of constructor
+ [ ] Models         [0%]
  - [ ] Course
    - [ ] add qa/get protocol
  - [ ] Checkpoint
    - [ ] add qa/get protocol
+ [ ] Adapters       [0%]
  - [ ] HTTP
+ [ ] Authentication [0%]
+ [ ] Repositories   [0%]
  - [ ] central repo
    + [ ] add publish
* Future                    [0%]
+ [ ] Viewmodels     [0%]
  - [ ] add tests
+ [-] Wrappers       [0%]
  - [-] pouchdb
    + [X] completed
    + [ ] refactor
+ [ ] Adapters       [0%]
  - [ ] pouchdb
  - [ ] HTTP
  - [ ] Websockets
+ [ ] Repositories   [0%]
  - [ ] user repo
    + [ ] implement better bootstrapping
    + [ ] add save
+ [ ] General        [0%]
  - [ ] refactor to cljc where possible
  - [ ] add test-check
* Optional                 [0%]
* Archive                   [100%]
+ [X] General        [100%]
  - [X] add test runner
  - [X] move system to separate module
  - [X] refactor responder in a generic and overridable part
  - [X] add source property to actions
  - [X] flatten payload
  - [X] move everything back from cljc to cljs dir
  - [X] add specter
  - [X] close! input-channel or lifecycle/stop!
+ [X] System         [100%]
  - [X] refactor map
  - [X] move index file to correct dir
+ [X] Models         [100%]
  - [X] action
    + [X] implement loggable protocol
  - [X] collection
  - [X] course
    + [X] add description field
    + [X] change base-id to hash
    + [X] add hashtag
    + [X] add timestamp
  - [X] datastore
    + [X] add tests
      - [X] check
      - [X] refresh
      - [X] get
    + [X] add easy way to retrieve docs
  - [X] label
  - [X] resource
  - [X] view
    + [X] add model
    + [X] refactor
+ [X] Protocols      [100%]
  - [X] Queryable
    + [X] add get
  - [X] Renderable
  - [X] Responsive
  - [X] Validatable
  - [X] Convertible
  - [X] Composable
  - [X] Loggable
+ [X] Adapters       [100%]
  - [X] fakedb
    + [X] fetch
    + [X] add curator / hashtag query
    + [X] improve error handling
    + [X] split into 2 (course and resources)
+ [X] API            [100%]
  - [X] add repositories field
  - [X] implement adapters
+ [X] Datastore      [100%]
  - [X] add component library
  - [X] make api consistent
  - [X] add validity check to responder
  - [X] Merge instead of override collections / collection names
  - [X] implement refresh on data service
  - [X] find bug that causes false rerender in appstate
  - [X] remove initialized?
  - [X] add check and refresh for curator + hashtag
  - [X] implement specter
  - [X] rename back to Datastore
+ [X] Appstate       [100%]
  - [X] remove initialized?
  - [X] add component library
  - [X] differentiate clearer between appstate and viewmodel
  - [X] move viewmodels out of service
  - [X] make api consistent [0%]
  - [X] move views to UI
+ [X] Viewmodels     [100%]
  - [X] Add Collection viewmodel
  - [X] move protocol implementations to separate files
  - [X] add course viewmodel
    - [X] add hashtag / curator query
  - [X] add checkpoint viewmodel
  - [X] add labels model
  - [X] move to separate module
  - [X] move viewmodel composition from refresh to new
  - [X] add graph
  - [X] add helpers
+ [X] Router         [100%]
  - [X] add component library
  - [X] add bidi
  - [X] add pushy
  - [X] move protocol implementations to separate files
  - [X] implement routes
    + [X] collections
    + [X] course
    + [X] checkpoint
+ [X] Views          [100%]
  - [X] transition view-components to RUM or Sablono
  - [X] sidebar
  - [X] correct BEM mistake
  - [X] topbar
  - [X] move description field
  - [X] collection view
    - [X] refactor into subcomponents
  - [X] checkpoint view
  - [X] add graph
+ [X] UI             [100%]
  - [X] rename from renderer
  - [X] implement renderable
  - [X] remove Rendering protocol
  - [X] add views
  - [X] add links
+ [X] Renderer       [100%]
  - [X] rename to UI
  - [X] add component library
+ [X] Logger         [100%]
  - [X] connect to Responsive
  - [X] connect to Debugger
+ [X] Debugger       [100%]
  - [X] basic implementation
  - [X] make simple UI
+ [X] Styles         [100%]
  - [X] rewrite styles to garden
  - [X] correct BEM mistake
  - [X] add media queries
